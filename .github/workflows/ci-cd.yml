name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      # S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }} # S3 버킷명 필요시 추가
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }} # EC2에 접속할 SSH 개인키

      - name: Copy files to EC2 (rsync over SSH)
        run: |
          rsync -avz --delete -e "ssh -o StrictHostKeyChecking=no -p 22" ./ ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/SIST-Chill-Hotel/

      - name: Remote Docker Compose Up
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "cd /home/${{ secrets.EC2_USER }}/SIST-Chill-Hotel && docker compose pull && docker compose down && docker compose up -d --build"

      # 필요시 S3 배포 단계 추가 가능

# [Secrets에 등록해야 할 항목]
# SSH_PRIVATE_KEY : EC2 SSH 접속용 개인키
# EC2_HOST        : EC2 퍼블릭 IP 또는 호스트명
# EC2_USER        : EC2 리눅스 사용자명 (예: ubuntu)
# AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, AWS_REGION : S3 및 AWS 연동용 키
# S3_BUCKET_NAME   : S3 버킷명(필요시)
